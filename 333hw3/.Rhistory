ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
xvar
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
xvar
6 /2.25
6  - 2.25
3.75 / 0.25
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,7,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(set)
library(sets)
download.packages(sets)
download.packages("sets")
download.packages
download.packages()
download.packages()
? download.packages()
install.packages(sets)
install.packages("sets")
Omega = set("a", "b", "c")
library(sets)
Omega = set("a", "b", "c")
2^Omega
3^Omega
2^Omega
length(2^Omega)
Omega = set("a", "b", "c", "d")
length(2^Omega)
Omega = set("a", "b", "c", "d", "e")
length(2^Omega)
5 * 4 * 3 * 2
factorial(5)
installed.packages
installed.packages()
library("ggplot2")
library(ggplot2)
x = seq(-2,2, sep = 0.1)
? seq
x = seq(-2,2, by = 0.1)
rm(list = ls())
x = seq(-2,2, by = 0.1)
y = 1 / ( 1 + exp(-x))
plot(x,y)
geom_line()
? geom_line
a = geom_line(x,y)
a
a = ggplot(aes(x,y))
D = data.frame(x = c(-1, 0, 1, 2, 3, 4), y = c(0, 1/8,
3/8, 3/8, 1/8, 0))
qplot(x, y, data = D, xlab = "$x$", ylab = "$p_X(x)$") +
geom_linerange(aes(x = x, ymin = 0, ymax = y))
library(ggplot2)
D = data.frame(x = c(-1, 0, 1, 2, 3, 4), y = c(0, 1/8,
3/8, 3/8, 1/8, 0))
qplot(x, y, data = D, xlab = "$x$", ylab = "$p_X(x)$") +
geom_linerange(aes(x = x, ymin = 0, ymax = y))
x = seq(-0.5, 1.5, length = 100)
y = x^2
y[x < 0] = 0
y[x > 1] = 1
z = 2 * x
z[x < 0] = 0
z[x > 1] = 0
D = stack(list(`$f_R(r)$` = z, `$F_R(r)$` = y))
names(D) = c("probability", "Function")
D$x = x
qplot(x, y = probability, geom = "line", xlab = "$r$",
ylab = "", lty = Function, color = Function, data = D,
size = I(1.5))
x = seq(-6, 6, length.out = 200)
R = data.frame(density = dnorm(x, 0, 1))
R$tdensity = dt(x, 1.5)
R$x = x
P = ggplot(R, aes(x = x, y = density)) + geom_area(fill = I("grey")) +
geom_line(aes(x = x, y = tdensity), xlab = "$x$",
ylab = "$f_X(x)$", lwd = I(2))
P + opts(title = "Gaussian (shaded) and t-distribution (dof=1.5) densities")
source('~/Code/R/chris_tutorial.R', echo=TRUE)
y
source('~/Code/R/chris_tutorial.R', echo=TRUE)
y = sign(rnorm(100))
rm(list = ls());
y = sign(rnorm(100))
t
y
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
x
y
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
m = glm(y ~ x[,1], family = bino)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
x
x[,1]
x[,1:end]
x[,1:100]
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
plot(x[,1],y)
rnorm(100)
rnorm(100^@)
rnorm(100^2)
dim(rnorm(100^2))
dim(x)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
summary(m)
m = glm(y ~ x[,1], family = binomial)
summary(m)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/overfittingDemo.R', echo=TRUE)
rnorm(3^2)
rnorm(10,2)
factorial(5)
factorial(8)
(1/48) / ((1/12) + (1/48) + (3 / 216 / 8) + (1 / (6^4) / 16)
)
a = (1/48) / ((1/12) + (1/48) + (3 / 216 / 8) + (1 / (6^4) / 16))
(((1/4) * (3 / 6^2)) + ((1/16) * (1/6^4))) / (1/3)
(4^2) * (3^3) + 1
a = (4^2) * (3^3) + 1
b = (4^4) * (3^3)
a/b
((2 / (6^2)) / 8) / (1/6/4 + 2 /36 / 8 + 1 / 16 / (6^3))
(1 / 36 / 4) / ((1 / 36 / 4) + (2 / 6 / 36 / 8) + (1 / 36 / 36 / 16))
(1 / 36 / 4 ) / ( 1 / 36 / 4 + 2 / 36 / 6 / 8 + 1 / 36 / 36 / 16)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_3.R', echo=TRUE)
print("hi")
source('~/.active-rstudio-document', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
summary(lm.fit)
cor(mydata$GPA,mydata$ACT)
x = seq(1,2,0.1)
x
x = seq(min(mydata$ACT),max(mydata$ACT),0.01)
x
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
band = data.frame(ACTRange)
BAND
band
band = data.frame(ACTRange)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
predict(lm.fit, band, interval = "confidence", level = 0.95)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
lm.fit
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
head(mydata1)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
summary(mydata1)
tabulate(x)
tabulate(mydata1)
tabulate(mydata1$X)
table(mydata1$X)
table(mydata1$Y)
table(mydata1$X)
table(mydata2$X)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
plot(mydata1$X, mydata1$Y)
plot(mydata1$X, mydata1$Y)
abline(lm1.fit)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
table(mydata1$X)
table(mydata2$X)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
combn(8,2)
combn(3,2)
combn(2,2)
combn(4,2)
d <- data.frame(x=c(1,4,5,7),
y=c(0.8,4.2,4.7,8))
lm1 <- lm(y~x,data=d)
p_conf1 <- predict(lm1,interval="confidence")
p_pred1 <- predict(lm1,interval="prediction")
p_conf1
nd <- data.frame(x=seq(0,8,length=51))
p_conf2 <- predict(lm1,interval="confidence",newdata=nd)
p_pred2 <- predict(lm1,interval="prediction",newdata=nd)
plot(y~x,data=d,ylim=c(-5,12),xlim=c(0,8)) ## data
abline(lm1) ## fit
matlines(nd$x,p_conf2[,c("lwr","upr")],col=4,lty=1,type="b",pch="+")
matlines(nd$x,p_pred2[,c("lwr","upr")],col=4,lty=2,type="b",pch=1)
nd <- data.frame(x=seq(0,8,length=5000))
p_conf2 <- predict(lm1,interval="confidence",newdata=nd)
p_pred2 <- predict(lm1,interval="prediction",newdata=nd)
plot(y~x,data=d,ylim=c(-5,12),xlim=c(0,8)) ## data
abline(lm1) ## fit
matlines(nd$x,p_conf2[,c("lwr","upr")],col=4,lty=1,type="b",pch="+")
matlines(nd$x,p_pred2[,c("lwr","upr")],col=4,lty=2,type="b",pch=1)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
setwd("/Users/Qihong/Dropbox/Current Courses/STAT333/333hw3")
rm(list = ls())
mydata1 = read.csv('Data1.csv');
mydata2 = read.csv('Data2.csv');
mydata1 = data.frame(mydata1)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
? pch
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
? pch
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
? matlines
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
table(mydata1)
table(mydata1[1])
table(mydata1[2])
table(mydata1[1])
table(mydata2[1])
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6.R', echo=TRUE)
? rep
rep(1,5)
rep(2000,8)
source('~/Dropbox/Current Courses/STAT333/333hw3/HW 3 Problem 6 simulation.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/HW 3 Problem 6 simulation.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)
cl
clc
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
? predict
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
mydata
mydata[1]
mydata[1] - mean(mydata[1])
(mydata[1] - mean(mydata[1])) ^ 2
mydata[1]
mean(mydata[1])
mydata[1,:]
mydata[1]
mydata
mydata$GPA
mydata$GPA - mean(mydata$GPA)
sum(mydata$GPA - mean(mydata$GPA))
(mydata$GPA - mean(mydata$GPA))^2
sum((mydata$GPA - mean(mydata$GPA))^2)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
sum((mydata$ACT - mean(mydata$ACT))^2)
sum((mydata$ACT - mean(mydata$ACT))^2)
sum((mydata$ACT - mean(mydata$ACT))^2)
anova(lm.fit)
sum((mydata$ACT - mean(mydata$ACT))^2)
anova(lm.fit)
sum((mydata$GPA - mean(mydata$GPA))^2)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
predict(lm.fit, newdata, interval = "confidence", level = 0.95)
predict(lm.fit, newdata = band, interval = "prediction", level = 0.95)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
newdata = data.frame(ACT = 28)
# a)
predict(lm.fit, newdata, interval = "confidence", level = 0.95)
newdata = data.frame(ACT = 28)
predict(lm.fit, newdata, interval = "confidence", level = 0.95)
predict(lm.fit, newdata, interval = "prediction", level = 0.95)
predict(lm.fit, newdata, interval = "prediction", level = 0.95)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
anova(lm.fit)
sum((mydata$GPA - mean(mydata$GPA))^2)
anova(lm.fit)
cor(mydata$GPA,mydata$ACT)
ls
cor(mydata$GPA,mydata$ACT)
anova1 = as.data.frame(anova(lm1.fit))
anova2 = as.data.frame(anova(lm2.fit))
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
SSxx1 = sum(mydata1$X^2) + sum(mydata1$X)^2/n[1]
mydata1
SSxx1 = sum(mydata1$X^2) + sum(mydata1$X)^2/20
SSxx1
MSE1 = anova1$"Mean Sq"[2]
anova1$"Mean Sq"
anova1$"Mean Sq"[2]
SS_CI = sqrt(MSE1 * ( (1/n) + (15 - mean(mydata1$X))/SSxx1  ))
SS_CI1 = sqrt(MSE1 * ( (1/n) + (15 - mean(mydata1$X))/SSxx1 ))
n = 20
SS_CI1 = sqrt(MSE1 * ( (1/n) + (15 - mean(mydata1$X))/SSxx1 ))
sqrt(MSE1 * ( (1/n) + (15 - mean(mydata1$X))/SSxx1 ))
sqrt(MSE1 * ( 1 + (1/n) + (15 - mean(mydata1$X))/SSxx1 ))
summary(lm1.fit)
summary(lm2.fit)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)
SE_Pr1
SE_CI1 = sqrt(MSE1 * ( (1/n) + (15 - mean(mydata1$X))/SSxx1 ))
SE_Pr1 = sqrt(MSE1 * ( 1 + (1/n) + (15 - mean(mydata1$X))/SSxx1 ))
SE_Pr1
SE_CI1 = sqrt(MSE1 * ( (1/n) + (15 - mean(mydata1$X))/SSxx1 ))
SE_Pr1 = sqrt(MSE1 * ( 1 + (1/n) + (15 - mean(mydata1$X))/SSxx1 ))
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
SE_Pr1
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
summary(lm1.fit)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
qf(.95,2,118)
W = sqrt(2 * qf(.95,2,118))
W
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
# d) Confidence band
W = sqrt(2 * qf(.95,2,118))
W
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
# Confidence band
W = sqrt(2 * qf(.95,2,118))
W
? rnorm
mean = 10
sd = 5
small = rnorm(20, mean, sd)
big = rnorm(2000, mean, sd)
summary(small)
sd(small)
summary(big)
sd(big)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_4.R', echo=TRUE)
anova(lm.fit)
sum((mydata$GPA - mean(mydata$GPA))^2)
anova(lm.fit)
lm.fit$residuals
sum((lm.fit$residuals)^2)
anova(lm.fit)
sum((lm.fit$effects)^2)
sum((lm.fit$coefficients)^2)
anova(lm.fit)
sum((lm.fit$fitted.values)^2)
sum((lm.fit$model)^2)
sum((lm.fit$residuals)^2)
sum((mydata$GPA - mean(mydata$GPA))^2)
sum((mydata$GPA - mean(mydata$GPA))^2) - sum((lm.fit$residuals)^2)
qf(.95,2,118)
qf(.99,2,118)
W = sqrt(2 * qf(.95,1,118))
W
W = sqrt(2 * qf(.95,2,118))
W
W = sqrt(2 * qf(.99,1,118))
qf(.99,1,118)
cor(mydata$GPA,mydata$ACT)
Xnew = data.frame(X = 15)
predict(lm1.fit, Xnew, interval = "confidence", level = 0.95, se.fit = T)
predict(lm1.fit, Xnew, interval = "prediction", level = 0.95, se.fit = T)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6a.R', echo=TRUE)
Xnew = data.frame(X = 15)
predict(lm1.fit, Xnew, interval = "confidence", level = 0.95, se.fit = T)
predict(lm1.fit, Xnew, interval = "prediction", level = 0.95, se.fit = T)
Xnew = data.frame(X = 15)
predict(lm1.fit, Xnew, interval = "confidence", level = 0.95, se.fit = T)
predict(lm2.fit, Xnew, interval = "confidence", level = 0.95, se.fit = T)
predict(lm2.fit, Xnew, interval = "confidence", level = 0.95, se.fit = T)
predict(lm2.fit, Xnew, interval = "prediction", level = 0.95, se.fit = T)
predict(lm1.fit, Xnew, interval = "prediction", level = 0.95, se.fit = T)
predict(lm2.fit, Xnew, interval = "prediction", level = 0.95, se.fit = T)
n = 160
Xh = 15
SSxx1 = sum(mydata1$X^2) - sum(mydata1$X)^2/n
MSE1 = anova1$"Mean Sq"[2]
SE_CI1 = sqrt(MSE1 * ( (1/n) + (Xh - mean(mydata1$X))/SSxx1 ))
SE_Pr1 = sqrt(MSE1 * ( 1 + (1/n) + (Xh - mean(mydata1$X))/SSxx1 ))
SE_CI1
SE_Pr1
SSxx2 = sum(mydata2$X^2) - sum(mydata2$X)^2/n
MSE2 = anova2$"Mean Sq"[2]
SE_CI2 = sqrt(MSE2 * ( (1/n) + (Xh - mean(mydata2$X))/SSxx2 ))
SE_Pr2 = sqrt(MSE2 * ( 1 + (1/n) + (Xh - mean(mydata2$X))/SSxx2 ))
SE_CI2
SE_Pr2
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)
summary(lm1.fit)
summary(lm2.fit)
anova(lm1.fit)
anova(lm2.fit)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)
SE_CI1
SE_Pr1
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw3/hw3_6b.R', echo=TRUE)

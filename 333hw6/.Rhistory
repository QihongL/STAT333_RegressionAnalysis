rm(list = ls())
library('car')
mydata = read.table('CH03PR18.txt', header = F)
colnames(mydata)[1] = "ProductionTimeHours_Y"
colnames(mydata)[2] = "ProductionLotSize_X"
head(mydata)
################################################
# compare raw regression and transformation
################################################
par(mfrow = c(3,2))
# plot the data
plot(ProductionTimeHours_Y~ProductionLotSize_X, data = mydata, pch = 20,
main =expression('Regression function: Y ~ X'))
# fit the model
lm.fit1 = lm(ProductionTimeHours_Y~ProductionLotSize_X, data = mydata)
abline(lm.fit1)
# plot the transformed data, transformation X' = sqrt(X)
Xtransformed = sqrt(mydata$ProductionLotSize_X)
plot(ProductionTimeHours_Y~Xtransformed, data = mydata, pch = 20,
main =expression('Regression function: Y ~ '~sqrt(X)))
# fit the model
lm.fit2 = lm(ProductionTimeHours_Y~Xtransformed, data = mydata)
abline(lm.fit2)
# residual against fitted values
plot(lm.fit1$residuals ~ lm.fit1$fitted.values, pch = 20,
main = expression('Residual against fitted values: Y ~ X'))
abline(mean(lm.fit1$residuals), 0)
plot(lm.fit2$residuals ~ lm.fit2$fitted.values, pch = 20,
main = expression('Residual against fitted values: Y ~ '~sqrt(X)))
abline(mean(lm.fit2$residuals), 0 )
# normal probability plot
residualStandard1 = rstandard(lm.fit1)
qqnorm(residualStandard1, main = expression('Normal Probability plot: Y ~ X'))
qqline(residualStandard1)
residualStandard2 = rstandard(lm.fit2)
qqnorm(residualStandard2, main = expression('Normal Probability plot : Y ~ '~sqrt(X)))
qqline(residualStandard2)
mtext("Compare raw and transformed fit", side = 3, line = -1.5, outer = TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw5/hw5_1.R', echo=TRUE)
# HW5 - Question 1 - textbook 3.18
setwd('/Users/Qihong/Dropbox/Current Courses/STAT333/333hw5')
rm(list = ls())
library('car')
mydata = read.table('CH03PR18.txt', header = F)
colnames(mydata)[1] = "ProductionTimeHours_Y"
colnames(mydata)[2] = "ProductionLotSize_X"
head(mydata)
# HW5 - Question 1 - textbook 3.18
setwd('/Users/Qihong/Dropbox/Current Courses/STAT333/333hw5')
rm(list = ls())
library('car')
mydata = read.table('CH03PR18.txt', header = F)
colnames(mydata)[1] = "ProductionTimeHours_Y"
colnames(mydata)[2] = "ProductionLotSize_X"
head(mydata)
# HW5 - Question 1 - textbook 3.18
setwd('/Users/Qihong/Dropbox/Current Courses/STAT333/333hw5')
rm(list = ls())
library('car')
mydata = read.table('CH03PR18.txt', header = F)
colnames(mydata)[1] = "ProductionTimeHours_Y"
colnames(mydata)[2] = "ProductionLotSize_X"
head(mydata)
################################################
# compare raw regression and transformation
################################################
par(mfrow = c(3,2))
# plot the data
plot(ProductionTimeHours_Y~ProductionLotSize_X, data = mydata, pch = 20,
main =expression('Regression function: Y ~ X'))
# fit the model
lm.fit1 = lm(ProductionTimeHours_Y~ProductionLotSize_X, data = mydata)
abline(lm.fit1)
# plot the transformed data, transformation X' = sqrt(X)
Xtransformed = sqrt(mydata$ProductionLotSize_X)
plot(ProductionTimeHours_Y~Xtransformed, data = mydata, pch = 20,
main =expression('Regression function: Y ~ '~sqrt(X)))
# fit the model
lm.fit2 = lm(ProductionTimeHours_Y~Xtransformed, data = mydata)
abline(lm.fit2)
# residual against fitted values
plot(lm.fit1$residuals ~ lm.fit1$fitted.values, pch = 20,
main = expression('Residual against fitted values: Y ~ X'))
abline(mean(lm.fit1$residuals), 0)
plot(lm.fit2$residuals ~ lm.fit2$fitted.values, pch = 20,
main = expression('Residual against fitted values: Y ~ '~sqrt(X)))
abline(mean(lm.fit2$residuals), 0 )
# normal probability plot
residualStandard1 = rstandard(lm.fit1)
qqnorm(residualStandard1, main = expression('Normal Probability plot: Y ~ X'))
qqline(residualStandard1)
residualStandard2 = rstandard(lm.fit2)
qqnorm(residualStandard2, main = expression('Normal Probability plot : Y ~ '~sqrt(X)))
qqline(residualStandard2)
mtext("Compare raw and transformed fit", side = 3, line = -1.5, outer = TRUE)
source('~/Dropbox/Current Courses/STAT333/333hw5/hw5_1.R', echo=TRUE)
# HW5 - Question 1 - textbook 3.18
setwd('/Users/Qihong/Dropbox/Current Courses/STAT333/333hw5')
rm(list = ls())
library('car')
mydata = read.table('CH03PR18.txt', header = F)
colnames(mydata)[1] = "ProductionTimeHours_Y"
colnames(mydata)[2] = "ProductionLotSize_X"
head(mydata)
################################################
# compare raw regression and transformation
################################################
par(mfrow = c(3,2))
# plot the data
plot(ProductionTimeHours_Y~ProductionLotSize_X, data = mydata, pch = 20,
main =expression('Regression function: Y ~ X'))
# fit the model
lm.fit1 = lm(ProductionTimeHours_Y~ProductionLotSize_X, data = mydata)
abline(lm.fit1)
# plot the transformed data, transformation X' = sqrt(X)
Xtransformed = sqrt(mydata$ProductionLotSize_X)
plot(ProductionTimeHours_Y~Xtransformed, data = mydata, pch = 20,
main =expression('Regression function: Y ~ '~sqrt(X)))
# fit the model
lm.fit2 = lm(ProductionTimeHours_Y~Xtransformed, data = mydata)
abline(lm.fit2)
# residual against fitted values
plot(lm.fit1$residuals ~ lm.fit1$fitted.values, pch = 20,
main = expression('Residual against fitted values: Y ~ X'))
abline(mean(lm.fit1$residuals), 0)
plot(lm.fit2$residuals ~ lm.fit2$fitted.values, pch = 20,
main = expression('Residual against fitted values: Y ~ '~sqrt(X)))
abline(mean(lm.fit2$residuals), 0 )
# normal probability plot
residualStandard1 = rstandard(lm.fit1)
qqnorm(residualStandard1, main = expression('Normal Probability plot: Y ~ X'))
qqline(residualStandard1)
residualStandard2 = rstandard(lm.fit2)
qqnorm(residualStandard2, main = expression('Normal Probability plot : Y ~ '~sqrt(X)))
qqline(residualStandard2)
mtext("Compare raw and transformed fit", side = 3, line = -1.5, outer = TRUE)
? rstandard
lm
summary(lm.fit1$residuals)
plot(lm.fit1$residuals)
# HW5 - Question 1 - textbook 3.18
setwd('/Users/Qihong/Dropbox/Current Courses/STAT333/333hw5')
rm(list = ls())
library('car')
mydata = read.table('CH03PR18.txt', header = F)
colnames(mydata)[1] = "ProductionTimeHours_Y"
colnames(mydata)[2] = "ProductionLotSize_X"
head(mydata)
################################################
# compare raw regression and transformation
################################################
par(mfrow = c(3,2))
# plot the data
plot(ProductionTimeHours_Y~ProductionLotSize_X, data = mydata, pch = 20,
main =expression('Regression function: Y ~ X'))
# fit the model
lm.fit1 = lm(ProductionTimeHours_Y~ProductionLotSize_X, data = mydata)
abline(lm.fit1)
# plot the transformed data, transformation X' = sqrt(X)
Xtransformed = sqrt(mydata$ProductionLotSize_X)
plot(ProductionTimeHours_Y~Xtransformed, data = mydata, pch = 20,
main =expression('Regression function: Y ~ '~sqrt(X)))
# fit the model
lm.fit2 = lm(ProductionTimeHours_Y~Xtransformed, data = mydata)
abline(lm.fit2)
# residual against fitted values
plot(lm.fit1$residuals ~ lm.fit1$fitted.values, pch = 20,
main = expression('Residual against fitted values: Y ~ X'))
abline(mean(lm.fit1$residuals), 0)
plot(lm.fit2$residuals ~ lm.fit2$fitted.values, pch = 20,
main = expression('Residual against fitted values: Y ~ '~sqrt(X)))
abline(mean(lm.fit2$residuals), 0 )
# normal probability plot
residualStandard1 = rstandard(lm.fit1)
qqnorm(residualStandard1, main = expression('Normal Probability plot: Y ~ X'))
qqline(residualStandard1)
residualStandard2 = rstandard(lm.fit2)
qqnorm(residualStandard2, main = expression('Normal Probability plot : Y ~ '~sqrt(X)))
qqline(residualStandard2)
mtext("Compare raw and transformed fit", side = 3, line = -1.5, outer = TRUE)
q = qqnorm(residualStandard2, main = expression('Normal Probability plot : Y ~ '~sqrt(X)))
q
plot(q)
dev.off()
setwd('/Users/Qihong/Code/github/STAT333_RegressionAnalysis/333hw6')
rm(list = ls())
mydata = read.table('CH05PR05.txt', header = F)
mydata
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
mydata$x
mydata$X
as.matrix(mydata$X)
c(mydata$X)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
X
t(X)
X
X %*% X
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
X
as.matrix( c(), mydata(X))
? rep
rep(1, length(mydata$X))
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
length(mydata$X)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
X
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
X
is.matrix(X)
? %*%
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
Y
Y^2
sum(Y^2)
transpose(X)
t(X)
t(X) %*% X
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
crossprod(X,Y)
crossprod(X,X)
crossprod(Y,Y)
diag(3)
Y%o%Y
solve(diag(3))
diag(3) * 3
a = diag(3) * 3
solve(a)
matrix(c(1,1,1,5,0,0,0,5,5), nrow = 3, ncol = 3)
a = matrix(c(1,1,1,5,0,0,0,5,5), nrow = 3, ncol = 3)
solve(a)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
solve(t(X) %*% X) %*% (t(X) %*% Y)
lm.fit(mydata$Y ~ mydata$X)
mydata
lm.fit = lm(mydata$Y ~ mydata$X)
summary(lm.fit)
solve(t(X) %*% X) %*% (t(X) %*% Y)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
plot(lm.fit)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
beat
beta
X
X * beta
X %*% beta
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
Yfitted
lm.fit$fitted.values
Yfitted - Y
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
residuals
lm.fit$residuals
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
resiudal
residuals
residual
residuals
residuals^2
sum(residuals^2)
Y
mean(Y)
Yfitted - mean(Y)
(Yfitted - mean(Y))^2
sum((Yfitted - mean(Y))^2)
Y - mean(Y)
sum((Y - mean(Y))^2)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
SSR + SSE
vcov(lm.fit)
var(beta)
beta
cov(beta)
solve(t(X) %*% X) %*% (t(X) %*% Y)
cov(solve(t(X) %*% X) %*% (t(X) %*% Y))
var(solve(t(X) %*% X) %*% (t(X) %*% Y))
solve(t(X) %*% X) %*% (t(X) %*% Y)
t(X) %*% X
solve(t(X) %*% X)
var(solve(t(X) %*% X))
cov(solve(t(X) %*% X))
cor(solve(t(X) %*% X))
var(solve(t(X) %*% X))
vcov(lm.fit)
beta
source('~/.active-rstudio-document', echo=TRUE)
beta
X %*% beta
X
Xhat %*% beta
beta
X %*% solve((t(X) %*% X))
X %*% solve((t(X) %*% X)) %*% solve(X)
X
X %*% solve((t(X) %*% X))
X %*% solve((t(X) %*% X)) %*% t(X)
source('~/.active-rstudio-document')
var(1)
var(c(1,2))
Xhat
t(Xhat) %*% solve(t(X) %*% X) %*% Xhat
var(t(Xhat) %*% solve(t(X) %*% X) %*% Xhat)
t(Xhat) %*% solve(t(X) %*% X) %*% Xhat
t(Xhat)
t(Xhat) * beta
t(Xhat) %*% beta
t(Xhat) %*% solve(t(X) %*% X) %*% Xhat
residual
residuals
H
H %*% H
diag(6) - H
(diag(6) - H) %*% (diag(6) - H)
(diag(6) - H)
Y
(diag(6) - H) %*% Y
residuals
Y
t(Y) %*% H %*% Y
t(Y) %*% Y
H %*% Y
(diag(6))
(diag(6) - H)
(diag(6) - H) %*% Y
t(Y) (diag(6) - H) %*% Y
t(Y) %*% (diag(6) - H) %*% Y
t(Y) %*% Y - t(Y) %*% H %*% Y
H
trace(H)
tr(H)
diag(H)
1 - diag(H)
sum(1 - diag(H))
sum(diag(H))
sum(1 - diag(H))
H
var(y)
var(Y)
var(Y) * [1/]
var(Y) * [1/length(Y)]
var(Y) * ([)1/length(Y))
var(Y) * (1/length(Y))
var(Y) * (1/length(Y) + (4 - mean(mydata$X)) / sum((mydata$X - mean(mydata$X))^2) )
var(Y) * (1/length(Y) + (4 - mean(mydata$X)) / sum((mydata$X - mean(mydata$X))^2) )
Xhat %*% beta
t(Xhat) %*% beta
Xhat
beta
var(t(Xhat) %*% beta)
t(Xhat) %*% solve(t(X) %*% X) %*% Xhat
var(Y) *  t(Xhat) %*% solve(t(X) %*% X) %*% Xhat
length(Y)
var(Y) * (1/length(Y) + ((4 - mean(mydata$X))^2) / sum((mydata$X - mean(mydata$X))^2) )
var(Y) *  t(Xhat) %*% solve(t(X) %*% X) %*% Xhat
var(solve(t(X) %*% X))
var(Y) * var(solve(t(X) %*% X))
var(Y) (1/6 + mean(mydata$X)^2 / sum((mydata$X - mean(mydata$X) )^2))
var(Y) * (1/6 + mean(mydata$X)^2 / sum((mydata$X - mean(mydata$X) )^2))
var(Y) * ((1/6) + mean(mydata$X)^2 / sum((mydata$X - mean(mydata$X) )^2))
var(Y) * ((1/6) + mean(mydata$X^2) / sum((mydata$X - mean(mydata$X) )^2))
MSE
MSE = SSE / 4
MSE
solve(t(X) %*% X)
solve(t(X) %*% X) * MSE
var(Y)
summary(lm.fit)
MSE
sqrt(MSE)
Yhat_var = MSE *  t(Xhat) %*% solve(t(X) %*% X) %*% Xhat
Yhat_var
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
beta_vcov
cov_b0_b1 = beta_vcov[1,2]
cov_b0_b1
var_b0 = beta_vcov[1,1]
var_b1 = beta_vcov[2,2]
Yhat_var = MSE * (1 + t(Xhat) %*% solve(t(X) %*% X) %*% Xhat)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6_1.R', echo=TRUE)
Yhat_var
MSE
(diag())
size(H)
dim(H)
dim(H)[1]
diag(dim(H)[1])
diag(dim(H)[1]) - H
(diag(dim(H)[1]) - H)
MSE * (diag(dim(H)[1]) - H)
Y
sum(Y^2)
sum(Y^2) * 4
t(Y) %*% H %*% Y
t(Y) %*% (diag(dim(H)[1] - )H) %*% Y
t(Y) %*% (diag(dim(H)[1] - H) %*% Y
t(Y) %*% (diag(dim(H)[1] - H)) %*% Y
t(Y) %*% (diag(6) - H) %*% Y
t(Y) %*% (diag(6) - H) %*% Y
t(Y) %*% Y
t(Y) %*% Y - t(Y) %*%H%*% Y
Y
sum(Y^2)
tr(H)
trace(H)
diag(JH)
diag(H)
diag(H) * Y^2
sum(diag(H) * Y^2)
sum(Y^2) - sum(diag(H) * Y^2)
Y
Y
t(Y) %*% Y
sum(Y^2)
t(Y)
t(Y) %*% diag(H) %*% Y
sum(t(Y) %*% diag(H) %*% Y)
t(Y) %*% diag(H) %*% Y
H
t(Y)
t(Y) %*% Y
t(Y) %*% Y - t(Y) %*% diag(H) %*% Y
t(Y) %*% diag(H) %*% Y
sum(t(Y) %*% diag(H) %*% Y)
t(Y) %*% Y - sum(t(Y) %*% diag(H) %*% Y)
H
H == H
H == t(H)
H
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6.R', echo=TRUE)
h
H
t(H)
t(Y)%*%(diag(6) - H)%*%Y
summary(lm.fit)
anova(lm.fit)
SSE
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6.R', echo=TRUE)
SSE
t(Y) %*% (Y - H %*% Y)
t(Y) %*% Y - t(Y) %*% H %*% Y)
t(Y) %*% Y - t(Y) %*% H %*% Y
t(Y) %*% Y
t(Y) %*% H %*% Y
diag(H)
diag(H) * Y^2
sum(diag(H) * Y^2)
sum(diag(H) %*% Y^2)
diag(H) %*% Y^2
t(diag(H)) %*% Y^2
diag(H) %*% Y^2
Y^2
diag(6) - H
Hp = diag(6) - H
Hp
diag(Hp)
t(Y) %*% diag(Hp) %*% Y
sum(t(Y) %*% diag(Hp) %*% Y)
t(Y) %*% diag(Hp) %*% Y
t(Y) %*% Hp %*% Y
Y^2
Y^2 * Hp
Y^2 * diag(Hp)
sum(Y^2 * diag(Hp))
Y^2 * diag(Hp)
H[]
Hp
Y^2 * diag(Hp)
Y^2
256 * 0.63
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6.R', echo=TRUE)
t(Y) %*% Y
t(X) %*% X
t(X) %*% Y
solve(t(X) %*% X)
beta = solve(t(X) %*% X) %*% (t(X) %*% Y); beta
Yfitted = X %*% beta
residuals = Y - Yfitted;residuals
SSR = sum((Yfitted - mean(Y))^2);SSR
SSE = sum(residuals^2);SSE
MSE = SSE / 4
beta_vcov = MSE * var(solve(t(X) %*% X)); beta_vcov
# 6) point estimate of Y when X = 4
Xhat = c(1, 4)
Yhat = Xhat %*% beta
# 6) point estimate of Y when X = 4
Xhat = c(1, 4)
Yhat = Xhat %*% beta; Yhat
Yhat_var = MSE * (1 + t(Xhat) %*% solve(t(X) %*% X) %*% Xhat);Yhat_var
beta_vcov
cov_b0_b1 = beta_vcov[1,2];cov_b0_b1
var_b0 = beta_vcov[1,1];var_b0
var_b1 = beta_vcov[2,2];var_b1
beta_vcov
source('~/Code/github/STAT333_RegressionAnalysis/333hw6/hw6.R', echo=TRUE)
beta_vcov
covariance_of_b0_and_b1 = beta_vcov[1,2];covariance_of_b0_and_b1
variance_b0 = beta_vcov[1,1];variance_b0
variance_b1 = beta_vcov[2,2];variance_b1
H = X %*% solve((t(X) %*% X)) %*% t(X);H
MSE * (diag(dim(H)[1]) - H)

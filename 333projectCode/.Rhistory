geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,0,2),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,0,2),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,0,2),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,0,2),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,0,2),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,0,2),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,0,2),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,2),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,2),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
xvar
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,6,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
xvar
6 /2.25
6  - 2.25
3.75 / 0.25
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = seq(2.25,7,0.25) + rnorm(20,1,1),
yvar = seq(0.05,0.5,0.025) + rnorm(20,0.4,0.2))
# ggplot(dat, aes(x=xvar, y=yvar)) + geom_point(shape=1)
sp = ggplot(dat, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +
geom_smooth(method=lm) + geom_point()
sp + xlab("visual coherence") +
ylab("facilitation effect") +
labs(title="Expected rough coorelation between
visual coherence and the magnitude of the facilitation effect")
library(set)
library(sets)
download.packages(sets)
download.packages("sets")
download.packages
download.packages()
download.packages()
? download.packages()
install.packages(sets)
install.packages("sets")
Omega = set("a", "b", "c")
library(sets)
Omega = set("a", "b", "c")
2^Omega
3^Omega
2^Omega
length(2^Omega)
Omega = set("a", "b", "c", "d")
length(2^Omega)
Omega = set("a", "b", "c", "d", "e")
length(2^Omega)
5 * 4 * 3 * 2
factorial(5)
installed.packages
installed.packages()
library("ggplot2")
library(ggplot2)
x = seq(-2,2, sep = 0.1)
? seq
x = seq(-2,2, by = 0.1)
rm(list = ls())
x = seq(-2,2, by = 0.1)
y = 1 / ( 1 + exp(-x))
plot(x,y)
geom_line()
? geom_line
a = geom_line(x,y)
a
a = ggplot(aes(x,y))
D = data.frame(x = c(-1, 0, 1, 2, 3, 4), y = c(0, 1/8,
3/8, 3/8, 1/8, 0))
qplot(x, y, data = D, xlab = "$x$", ylab = "$p_X(x)$") +
geom_linerange(aes(x = x, ymin = 0, ymax = y))
library(ggplot2)
D = data.frame(x = c(-1, 0, 1, 2, 3, 4), y = c(0, 1/8,
3/8, 3/8, 1/8, 0))
qplot(x, y, data = D, xlab = "$x$", ylab = "$p_X(x)$") +
geom_linerange(aes(x = x, ymin = 0, ymax = y))
x = seq(-0.5, 1.5, length = 100)
y = x^2
y[x < 0] = 0
y[x > 1] = 1
z = 2 * x
z[x < 0] = 0
z[x > 1] = 0
D = stack(list(`$f_R(r)$` = z, `$F_R(r)$` = y))
names(D) = c("probability", "Function")
D$x = x
qplot(x, y = probability, geom = "line", xlab = "$r$",
ylab = "", lty = Function, color = Function, data = D,
size = I(1.5))
x = seq(-6, 6, length.out = 200)
R = data.frame(density = dnorm(x, 0, 1))
R$tdensity = dt(x, 1.5)
R$x = x
P = ggplot(R, aes(x = x, y = density)) + geom_area(fill = I("grey")) +
geom_line(aes(x = x, y = tdensity), xlab = "$x$",
ylab = "$f_X(x)$", lwd = I(2))
P + opts(title = "Gaussian (shaded) and t-distribution (dof=1.5) densities")
source('~/Code/R/chris_tutorial.R', echo=TRUE)
y
source('~/Code/R/chris_tutorial.R', echo=TRUE)
y = sign(rnorm(100))
rm(list = ls());
y = sign(rnorm(100))
t
y
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
x
y
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
m = glm(y ~ x[,1], family = bino)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
x
x[,1]
x[,1:end]
x[,1:100]
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
plot(x[,1],y)
rnorm(100)
rnorm(100^@)
rnorm(100^2)
dim(rnorm(100^2))
dim(x)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
summary(m)
m = glm(y ~ x[,1], family = binomial)
summary(m)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/chris_tutorial.R', echo=TRUE)
source('~/Code/R/overfittingDemo.R', echo=TRUE)
rnorm(3^2)
rnorm(10,2)
getwd()
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
read.table('CH06PR18.txt')
data =read.table('CH06PR18.txt')
head(data)
data =read.table('CH06PR18.txt', header = F, col.names = c('Y','X1','X2','X3','X4'))
head(data)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
stem(mydata$age_X1)
summary(myd)
summary(mydatata)
summary(mydata)
stem(mydata$age_X1)
stem(mydata$expenses_X2)
stem(mydata$vacancy_X3)
stem(mydata$sqrFootage_X4)
stem(mydata$age_X1)
plot(mydata)
cor(mydata)
plot(mydata, pch = 16)
help lm
? lm
# HW7 - 1 - Commercial properties
setwd('/Users/Qihong/Code/github/STAT333_RegressionAnalysis/333hw7_code')
rm(list = ls())
mydata =read.table('CH06PR18.txt', header = F,
col.names = c('rentalRate_Y','age_X1',
'expenses_X2','vacancy_X3','sqrFootage_X4'))
# a) stem plot for all regressors
stem(mydata$age_X1)
stem(mydata$expenses_X2)
stem(mydata$vacancy_X3)
stem(mydata$sqrFootage_X4)
# b) scatter plot matrix & r matrix
plot(mydata, pch = 16)
cor(mydata)
# c) fit regression model, state the function
lm.fit = lm(mydata$rentalRate_Y ~ mydata$age_X1
+ mydata$expenses_X2 + mydata$vacancy_X3 + mydata$sqrFootage_X4)
summary(lm.fit)
anova(lm.fit)
plot(mydata, pch = 16, main = 'plot')
plot(mydata, pch = 16, main = 'scatter plot matrix ')
plot(mydata, pch = 16, main = 'Scatter Plot Matrix')
boxplot(lm.fit$residuals)
boxplot(lm.fit$residuals, main = 'residuals')
boxplot(lm.fit$residuals, main = 'Residuals')
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
? boxplot
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
plot(lm.fit)
abline(v = mean(lm.fit$residuals))
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
? abline
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
plot(lm.fit$residuals ~ mydata$age_X1, pch = 20)
abline(v = mean(lm.fit$residuals))
abline(mean(lm.fit$residuals))
abline(mean(lm.fit$residuals), 0)
plot(lm.fit$residuals ~ mydata$expenses_X2, pch = 20)
abline(v = mean(lm.fit$residuals))
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
mtext("Title for Two Plots", outer = TRUE, cex = 1.5)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
mtext("Title for Two Plots", outer = TRUE, cex = 1.1)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
mtext("Title for Two Plots", outer = TRUE, cex = 0.5)
z1 <- rexp(100)
z2 <- rexp(100)
z3 <- rexp(100)
z4 <- rexp(100)
par(mfrow=c(2,2),oma = c(0, 0, 3, 0))
curve(dexp,from=0,to=5)
hist(z1,main="first")
hist(z2,main="second")
hist(z3,main="third")
mtext("Densities", outer = TRUE, cex = 1.5)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
mtext("residuals against each predictors", outer = TRUE, cex = 1.5)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
? require
combn(2,4)
combn(8,2)
combn(4,2)
combn(4,2)[1]
combn(4,2)[1,:]
combn(4,2)[1,]
combn(4,2)[,1]
combn(4,2)[,1][1]
combn(4,2)
plot(lm.fit$residuals ~ mydata$age_X1 : mydata$expenses_X2, pch = 20)
plot(lm.fit$residuals ~ mydata$age_X1 * mydata$expenses_X2, pch = 20)
mydata
stem(mydata$age_X1)
pairs(mydata, pch = 16, main = 'Scatter Plot Matrix')
stem(mydata$expenses_X2)
stem(mydata$vacancy_X3)
stem(mydata$sqrFootage_X4)
mydata
table(mydata)
table(mydata$age_X1)
table(mydata$expenses_X2)
table(mydata$vacancy_X3)
table(mydata$sqrFootage_X4)
mydata
a = (1,2)
a = c(1,2)
b = c(2,3)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
d = data.frame(a,b,)
d = data.frame(a,b)
d
a
a = c(2,1)
b = c(1,3)
d = data.frame(a,b)
d
d[3,] = c(1,2)
d
d[,3] = c(1,2, 3)
d
dim(mydata)
dim(mydata)[2]
lm.fit$fitted.values
colnames(mydata)
colnames(mydata)[5]
colnames(mydata)[dim(mydata)[2] + 1] = 'fittedValues'
mydata[, dim(mydata)[2] + 1] = lm.fit$fitted.values
colnames(mydata)[dim(mydata)[2] + 1] = 'fittedValues'
mydata = cbind(mydata, lm.fit$fitted.values)
mydata
head(mydata)
fitted = lm.fit$fitted.values
mydata = cbind(mydata, fitted)
head(mydata)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
head(mydata)
library(plyr)
? arrange
arrange()
sort(d)
d
sort(mydata)
? sort()
sort(mydata$fitted)
sort(mydata$fitted, mydata)
mydata( sort(mydata$fitted))
arrange(mydata, desc(mydata$fitted))
mydata
mydata_rankFitted = arrange(mydata, desc(mydata$fitted))
library(plyr)
library(car)
group = rep('A',40)
group = c(rep('A',40), rep('B', 41))
group = c(rep('A',40), rep('B', 41))
mydata = cbind(mydata,group)
head(mydata)
mydata
resid = lm.fit$residuals
fitted = lm.fit$fitted.values
mydata = cbind(mydata, fitted, resid)
source('~/Code/github/STAT333_RegressionAnalysis/333hw7_code/7_1.R', echo=TRUE)
head(mydata)
leveneTest(mydata$resid ~ mydata$group)
source('~/Code/github/STAT333_RegressionAnalysis/333projectCode/prelimOpenAir.R', echo=TRUE)
summary(mydata)
source('~/Code/github/STAT333_RegressionAnalysis/333projectCode/prelimOpenAir.R', echo=TRUE)
pairs(mydata)
a
